import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext } from '../http/http';
import { EnvironmentIn } from '../models/EnvironmentIn';
import { EnvironmentOut } from '../models/EnvironmentOut';
export declare class EnvironmentApiRequestFactory extends BaseAPIRequestFactory {
    exportEnvironmentConfigurationApiV1EnvironmentExportPost(body: any, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    importEnvironmentConfigurationApiV1EnvironmentImportPost(environmentIn: EnvironmentIn, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
}
export declare class EnvironmentApiResponseProcessor {
    exportEnvironmentConfigurationApiV1EnvironmentExportPost(response: ResponseContext): Promise<EnvironmentOut>;
    importEnvironmentConfigurationApiV1EnvironmentImportPost(response: ResponseContext): Promise<void>;
}
