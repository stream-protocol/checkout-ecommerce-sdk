import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext } from '../http/http';
import { DashboardAccessOut } from '../models/DashboardAccessOut';
export declare class AuthenticationApiRequestFactory extends BaseAPIRequestFactory {
    getDashboardAccessApiV1AuthDashboardAccessAppIdPost(appId: string, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    logoutApiV1AuthLogoutPost(idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
}
export declare class AuthenticationApiResponseProcessor {
    getDashboardAccessApiV1AuthDashboardAccessAppIdPost(response: ResponseContext): Promise<DashboardAccessOut>;
    logoutApiV1AuthLogoutPost(response: ResponseContext): Promise<void>;
}
