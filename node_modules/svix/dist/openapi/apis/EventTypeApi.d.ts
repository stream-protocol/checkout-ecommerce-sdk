import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext } from '../http/http';
import { EventTypeExampleOut } from '../models/EventTypeExampleOut';
import { EventTypeIn } from '../models/EventTypeIn';
import { EventTypeOut } from '../models/EventTypeOut';
import { EventTypeSchemaIn } from '../models/EventTypeSchemaIn';
import { EventTypeUpdate } from '../models/EventTypeUpdate';
import { ListResponseEventTypeOut } from '../models/ListResponseEventTypeOut';
export declare class EventTypeApiRequestFactory extends BaseAPIRequestFactory {
    createEventTypeApiV1EventTypePost(eventTypeIn: EventTypeIn, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    deleteEventTypeApiV1EventTypeEventTypeNameDelete(eventTypeName: string, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    generateSchemaExampleApiV1EventTypeSchemaGenerateExamplePost(eventTypeSchemaIn: EventTypeSchemaIn, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    getEventTypeApiV1EventTypeEventTypeNameGet(eventTypeName: string, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    listEventTypesApiV1EventTypeGet(iterator?: string, limit?: number, withContent?: boolean, includeArchived?: boolean, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    updateEventTypeApiV1EventTypeEventTypeNamePut(eventTypeName: string, eventTypeUpdate: EventTypeUpdate, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
}
export declare class EventTypeApiResponseProcessor {
    createEventTypeApiV1EventTypePost(response: ResponseContext): Promise<EventTypeOut>;
    deleteEventTypeApiV1EventTypeEventTypeNameDelete(response: ResponseContext): Promise<void>;
    generateSchemaExampleApiV1EventTypeSchemaGenerateExamplePost(response: ResponseContext): Promise<EventTypeExampleOut>;
    getEventTypeApiV1EventTypeEventTypeNameGet(response: ResponseContext): Promise<EventTypeOut>;
    listEventTypesApiV1EventTypeGet(response: ResponseContext): Promise<ListResponseEventTypeOut>;
    updateEventTypeApiV1EventTypeEventTypeNamePut(response: ResponseContext): Promise<EventTypeOut>;
}
