{"version":3,"file":"findAuctionHouseByAddress.mjs","sources":["../../../../../src/plugins/auctionHouseModule/operations/findAuctionHouseByAddress.ts"],"sourcesContent":["import type { PublicKey } from '@solana/web3.js';\nimport { toAuctioneerAccount, toAuctionHouseAccount } from '../accounts';\nimport { AuctioneerAuthorityRequiredError } from '../errors';\nimport { AuctionHouse, toAuctionHouse } from '../models/AuctionHouse';\nimport {\n  Operation,\n  OperationHandler,\n  OperationScope,\n  useOperation,\n} from '@/types';\nimport type { Metaplex } from '@/Metaplex';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindAuctionHouseByAddressOperation' as const;\n\n/**\n * Finds an Auction House by its address.\n *\n * ```ts\n * const nft = await metaplex\n *   .auctionHouse()\n *   .findByAddress({ address };\n * ```\n *\n * @group Operations\n * @category Constructors\n */\nexport const findAuctionHouseByAddressOperation =\n  useOperation<FindAuctionHouseByAddressOperation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type FindAuctionHouseByAddressOperation = Operation<\n  typeof Key,\n  FindAuctionHouseByAddressInput,\n  AuctionHouse\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type FindAuctionHouseByAddressInput = {\n  /** The address of the Auction House. */\n  address: PublicKey;\n\n  /**\n   * The Auctioneer authority key.\n   * It is required when Auction House has Auctioneer enabled.\n   *\n   * @defaultValue No default value.\n   */\n  auctioneerAuthority?: PublicKey;\n};\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const findAuctionHouseByAddressOperationHandler: OperationHandler<FindAuctionHouseByAddressOperation> =\n  {\n    handle: async (\n      operation: FindAuctionHouseByAddressOperation,\n      metaplex: Metaplex,\n      scope: OperationScope\n    ) => {\n      const { programs, commitment } = scope;\n      const { address, auctioneerAuthority } = operation.input;\n      const auctioneerPda = auctioneerAuthority\n        ? metaplex.auctionHouse().pdas().auctioneer({\n            auctionHouse: address,\n            auctioneerAuthority,\n            programs,\n          })\n        : undefined;\n      const accountsToFetch = [address, auctioneerPda].filter(\n        (account): account is PublicKey => !!account\n      );\n\n      const accounts = await metaplex\n        .rpc()\n        .getMultipleAccounts(accountsToFetch, commitment);\n      scope.throwIfCanceled();\n\n      const auctionHouseAccount = toAuctionHouseAccount(accounts[0]);\n      const mintModel = await metaplex\n        .tokens()\n        .findMintByAddress(\n          { address: auctionHouseAccount.data.treasuryMint },\n          scope\n        );\n      scope.throwIfCanceled();\n\n      if (!auctionHouseAccount.data.hasAuctioneer) {\n        return toAuctionHouse(auctionHouseAccount, mintModel);\n      }\n\n      if (!accounts[1] || !accounts[1].exists) {\n        throw new AuctioneerAuthorityRequiredError();\n      }\n\n      const auctioneerAccount = toAuctioneerAccount(accounts[1]);\n      return toAuctionHouse(auctionHouseAccount, mintModel, auctioneerAccount);\n    },\n  };\n"],"names":["Key","findAuctionHouseByAddressOperation","useOperation","findAuctionHouseByAddressOperationHandler","handle","operation","metaplex","scope","programs","commitment","address","auctioneerAuthority","input","auctioneerPda","auctionHouse","pdas","auctioneer","undefined","accountsToFetch","filter","account","accounts","rpc","getMultipleAccounts","throwIfCanceled","auctionHouseAccount","toAuctionHouseAccount","mintModel","tokens","findMintByAddress","data","treasuryMint","hasAuctioneer","toAuctionHouse","exists","AuctioneerAuthorityRequiredError","auctioneerAccount","toAuctioneerAccount"],"mappings":";;;;;AAYA;AACA;AACA;AAEA,MAAMA,GAAG,GAAG,oCAAZ,CAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MACaC,kCAAkC,GAC7CC,YAAY,CAAqCF,GAArC,EADP;AAGP;AACA;AACA;AACA;;AAwBA;AACA;AACA;AACA;AACO,MAAMG,yCAA+F,GAC1G;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIH;IACH,MAAM;MAAEC,QAAF;AAAYC,MAAAA,UAAAA;AAAZ,KAAA,GAA2BF,KAAjC,CAAA;IACA,MAAM;MAAEG,OAAF;AAAWC,MAAAA,mBAAAA;KAAwBN,GAAAA,SAAS,CAACO,KAAnD,CAAA;IACA,MAAMC,aAAa,GAAGF,mBAAmB,GACrCL,QAAQ,CAACQ,YAAT,EAAwBC,CAAAA,IAAxB,EAA+BC,CAAAA,UAA/B,CAA0C;AACxCF,MAAAA,YAAY,EAAEJ,OAD0B;MAExCC,mBAFwC;AAGxCH,MAAAA,QAAAA;KAHF,CADqC,GAMrCS,SANJ,CAAA;AAOA,IAAA,MAAMC,eAAe,GAAG,CAACR,OAAD,EAAUG,aAAV,CAAA,CAAyBM,MAAzB,CACrBC,OAAD,IAAmC,CAAC,CAACA,OADf,CAAxB,CAAA;AAIA,IAAA,MAAMC,QAAQ,GAAG,MAAMf,QAAQ,CAC5BgB,GADoB,EAEpBC,CAAAA,mBAFoB,CAEAL,eAFA,EAEiBT,UAFjB,CAAvB,CAAA;AAGAF,IAAAA,KAAK,CAACiB,eAAN,EAAA,CAAA;IAEA,MAAMC,mBAAmB,GAAGC,qBAAqB,CAACL,QAAQ,CAAC,CAAD,CAAT,CAAjD,CAAA;IACA,MAAMM,SAAS,GAAG,MAAMrB,QAAQ,CAC7BsB,MADqB,EAAA,CAErBC,iBAFqB,CAGpB;AAAEnB,MAAAA,OAAO,EAAEe,mBAAmB,CAACK,IAApB,CAAyBC,YAAAA;KAHhB,EAIpBxB,KAJoB,CAAxB,CAAA;AAMAA,IAAAA,KAAK,CAACiB,eAAN,EAAA,CAAA;;AAEA,IAAA,IAAI,CAACC,mBAAmB,CAACK,IAApB,CAAyBE,aAA9B,EAA6C;AAC3C,MAAA,OAAOC,cAAc,CAACR,mBAAD,EAAsBE,SAAtB,CAArB,CAAA;AACD,KAAA;;AAED,IAAA,IAAI,CAACN,QAAQ,CAAC,CAAD,CAAT,IAAgB,CAACA,QAAQ,CAAC,CAAD,CAAR,CAAYa,MAAjC,EAAyC;MACvC,MAAM,IAAIC,gCAAJ,EAAN,CAAA;AACD,KAAA;;IAED,MAAMC,iBAAiB,GAAGC,mBAAmB,CAAChB,QAAQ,CAAC,CAAD,CAAT,CAA7C,CAAA;AACA,IAAA,OAAOY,cAAc,CAACR,mBAAD,EAAsBE,SAAtB,EAAiCS,iBAAjC,CAArB,CAAA;AACD,GAAA;AA3CH;;;;"}