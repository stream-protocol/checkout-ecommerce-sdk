{"version":3,"file":"findBids.mjs","sources":["../../../../../src/plugins/auctionHouseModule/operations/findBids.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport { BidReceiptGpaBuilder } from '../gpaBuilders';\nimport { AuctionHouse, Bid, LazyBid, toLazyBid } from '../models';\nimport { toBidReceiptAccount } from '../accounts';\nimport {\n  Operation,\n  OperationHandler,\n  OperationScope,\n  useOperation,\n} from '@/types';\nimport { Metaplex } from '@/Metaplex';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindBidsOperation' as const;\n\n/**\n * Finds Bids by multiple criteria.\n * You can use any combination of keys.\n *\n * ```ts\n * // Find all bids in an Auction House.\n * const bids = await metaplex\n *   .auctionHouse()\n *   .findBids({ auctionHouse });\n *\n * // Find bids by buyer and mint.\n * const bids = await metaplex\n *   .auctionHouse()\n *   .findBids({ auctionHouse, buyer, mint });\n *\n * // Find bids by metadata.\n * const bids = await metaplex\n *   .auctionHouse()\n *   .findBids({ auctionHouse, metadata });\n * ```\n *\n * @group Operations\n * @category Constructors\n */\nexport const findBidsOperation = useOperation<FindBidsOperation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type FindBidsOperation = Operation<\n  typeof Key,\n  FindBidsInput,\n  FindBidsOutput\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type FindBidsInput = {\n  /** A model of the Auction House related to these listings. */\n  auctionHouse: AuctionHouse;\n\n  /** The address of a buyer to search by. */\n  buyer?: PublicKey;\n\n  /**\n   * The address of metadata to search by.\n   * Ignored when mint provided.\n   */\n  metadata?: PublicKey;\n\n  /** The address of a mint to search by. */\n  mint?: PublicKey;\n};\n\n/**\n * @group Operations\n * @category Outputs\n */\nexport type FindBidsOutput = (LazyBid | Bid)[];\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const findBidsOperationHandler: OperationHandler<FindBidsOperation> = {\n  handle: async (\n    operation: FindBidsOperation,\n    metaplex: Metaplex,\n    scope: OperationScope\n  ): Promise<FindBidsOutput> => {\n    const { programs, commitment } = scope;\n    const { auctionHouse, buyer, metadata, mint } = operation.input;\n    const auctionHouseProgram = metaplex.programs().getAuctionHouse(programs);\n\n    let bidQuery = new BidReceiptGpaBuilder(\n      metaplex,\n      auctionHouseProgram.address\n    )\n      .mergeConfig({ commitment })\n      .whereAuctionHouse(auctionHouse.address);\n\n    if (buyer) {\n      bidQuery = bidQuery.whereBuyer(buyer);\n    }\n\n    if (metadata && !mint) {\n      bidQuery = bidQuery.whereMetadata(metadata);\n    }\n\n    if (mint) {\n      bidQuery = bidQuery.whereMetadata(\n        metaplex.nfts().pdas().metadata({ mint, programs })\n      );\n    }\n\n    scope.throwIfCanceled();\n\n    return bidQuery.getAndMap((account) =>\n      toLazyBid(toBidReceiptAccount(account), auctionHouse)\n    );\n  },\n};\n"],"names":["Key","findBidsOperation","useOperation","findBidsOperationHandler","handle","operation","metaplex","scope","programs","commitment","auctionHouse","buyer","metadata","mint","input","auctionHouseProgram","getAuctionHouse","bidQuery","BidReceiptGpaBuilder","address","mergeConfig","whereAuctionHouse","whereBuyer","whereMetadata","nfts","pdas","throwIfCanceled","getAndMap","account","toLazyBid","toBidReceiptAccount"],"mappings":";;;;;AAYA;AACA;AACA;AAEA,MAAMA,GAAG,GAAG,mBAAZ,CAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MACaC,iBAAiB,GAAGC,YAAY,CAAoBF,GAApB,EAAtC;AAEP;AACA;AACA;AACA;;AAkCA;AACA;AACA;AACA;AACO,MAAMG,wBAA6D,GAAG;AAC3EC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIsB;IAC5B,MAAM;MAAEC,QAAF;AAAYC,MAAAA,UAAAA;AAAZ,KAAA,GAA2BF,KAAjC,CAAA;IACA,MAAM;MAAEG,YAAF;MAAgBC,KAAhB;MAAuBC,QAAvB;AAAiCC,MAAAA,IAAAA;KAASR,GAAAA,SAAS,CAACS,KAA1D,CAAA;IACA,MAAMC,mBAAmB,GAAGT,QAAQ,CAACE,QAAT,EAAoBQ,CAAAA,eAApB,CAAoCR,QAApC,CAA5B,CAAA;AAEA,IAAA,IAAIS,QAAQ,GAAG,IAAIC,oBAAJ,CACbZ,QADa,EAEbS,mBAAmB,CAACI,OAFP,CAIZC,CAAAA,WAJY,CAIA;AAAEX,MAAAA,UAAAA;AAAF,KAJA,EAKZY,iBALY,CAKMX,YAAY,CAACS,OALnB,CAAf,CAAA;;AAOA,IAAA,IAAIR,KAAJ,EAAW;AACTM,MAAAA,QAAQ,GAAGA,QAAQ,CAACK,UAAT,CAAoBX,KAApB,CAAX,CAAA;AACD,KAAA;;AAED,IAAA,IAAIC,QAAQ,IAAI,CAACC,IAAjB,EAAuB;AACrBI,MAAAA,QAAQ,GAAGA,QAAQ,CAACM,aAAT,CAAuBX,QAAvB,CAAX,CAAA;AACD,KAAA;;AAED,IAAA,IAAIC,IAAJ,EAAU;AACRI,MAAAA,QAAQ,GAAGA,QAAQ,CAACM,aAAT,CACTjB,QAAQ,CAACkB,IAAT,EAAgBC,CAAAA,IAAhB,EAAuBb,CAAAA,QAAvB,CAAgC;QAAEC,IAAF;AAAQL,QAAAA,QAAAA;AAAR,OAAhC,CADS,CAAX,CAAA;AAGD,KAAA;;AAEDD,IAAAA,KAAK,CAACmB,eAAN,EAAA,CAAA;AAEA,IAAA,OAAOT,QAAQ,CAACU,SAAT,CAAoBC,OAAD,IACxBC,SAAS,CAACC,mBAAmB,CAACF,OAAD,CAApB,EAA+BlB,YAA/B,CADJ,CAAP,CAAA;AAGD,GAAA;AApC0E;;;;"}