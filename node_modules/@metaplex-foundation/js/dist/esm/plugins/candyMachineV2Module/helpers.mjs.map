{"version":3,"file":"helpers.mjs","sources":["../../../../src/plugins/candyMachineV2Module/helpers.ts"],"sourcesContent":["import type { PublicKey } from '@solana/web3.js';\nimport {\n  CandyMachineData,\n  configLineBeet,\n} from '@metaplex-foundation/mpl-candy-machine';\nimport { CONFIG_ARRAY_START, CONFIG_LINE_SIZE } from './constants';\nimport { CandyMachineV2Item } from './models';\nimport { removeEmptyChars } from '@/utils';\nimport { BigNumber, toBigNumber } from '@/types';\n\nexport function countCandyMachineV2Items(rawData: Buffer): BigNumber {\n  const number = rawData.slice(CONFIG_ARRAY_START, CONFIG_ARRAY_START + 4);\n  return toBigNumber(number, 'le');\n}\n\nexport function parseCandyMachineV2Items(\n  rawData: Buffer\n): CandyMachineV2Item[] {\n  const configLinesStart = CONFIG_ARRAY_START + 4;\n  const lines = [];\n  const count = countCandyMachineV2Items(rawData).toNumber();\n  for (let i = 0; i < count; i++) {\n    const [line] = configLineBeet.deserialize(\n      rawData,\n      configLinesStart + i * CONFIG_LINE_SIZE\n    );\n    lines.push({\n      name: removeEmptyChars(line.name),\n      uri: removeEmptyChars(line.uri),\n    });\n  }\n  return lines;\n}\n\nexport function getCandyMachineV2AccountSizeFromData(data: CandyMachineData) {\n  if (data.hiddenSettings != null) {\n    return CONFIG_ARRAY_START;\n  }\n  const itemsAvailable = toBigNumber(data.itemsAvailable).toNumber();\n  return Math.ceil(\n    CONFIG_ARRAY_START +\n      4 +\n      itemsAvailable * CONFIG_LINE_SIZE +\n      8 +\n      2 * (itemsAvailable / 8 + 1)\n  );\n}\n\nexport const getCandyMachineV2UuidFromAddress = (\n  candyMachineAddress: PublicKey\n): string => {\n  return candyMachineAddress.toBase58().slice(0, 6);\n};\n"],"names":["countCandyMachineV2Items","rawData","number","slice","CONFIG_ARRAY_START","toBigNumber","parseCandyMachineV2Items","configLinesStart","lines","count","toNumber","i","line","configLineBeet","deserialize","CONFIG_LINE_SIZE","push","name","removeEmptyChars","uri","getCandyMachineV2AccountSizeFromData","data","hiddenSettings","itemsAvailable","Math","ceil","getCandyMachineV2UuidFromAddress","candyMachineAddress","toBase58"],"mappings":";;;;;AAUO,SAASA,wBAAT,CAAkCC,OAAlC,EAA8D;EACnE,MAAMC,MAAM,GAAGD,OAAO,CAACE,KAAR,CAAcC,kBAAd,EAAkCA,kBAAkB,GAAG,CAAvD,CAAf,CAAA;AACA,EAAA,OAAOC,WAAW,CAACH,MAAD,EAAS,IAAT,CAAlB,CAAA;AACD,CAAA;AAEM,SAASI,wBAAT,CACLL,OADK,EAEiB;AACtB,EAAA,MAAMM,gBAAgB,GAAGH,kBAAkB,GAAG,CAA9C,CAAA;EACA,MAAMI,KAAK,GAAG,EAAd,CAAA;EACA,MAAMC,KAAK,GAAGT,wBAAwB,CAACC,OAAD,CAAxB,CAAkCS,QAAlC,EAAd,CAAA;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9B,IAAA,MAAM,CAACC,IAAD,CAASC,GAAAA,cAAc,CAACC,WAAf,CACbb,OADa,EAEbM,gBAAgB,GAAGI,CAAC,GAAGI,gBAFV,CAAf,CAAA;IAIAP,KAAK,CAACQ,IAAN,CAAW;AACTC,MAAAA,IAAI,EAAEC,gBAAgB,CAACN,IAAI,CAACK,IAAN,CADb;AAETE,MAAAA,GAAG,EAAED,gBAAgB,CAACN,IAAI,CAACO,GAAN,CAAA;KAFvB,CAAA,CAAA;AAID,GAAA;;AACD,EAAA,OAAOX,KAAP,CAAA;AACD,CAAA;AAEM,SAASY,oCAAT,CAA8CC,IAA9C,EAAsE;AAC3E,EAAA,IAAIA,IAAI,CAACC,cAAL,IAAuB,IAA3B,EAAiC;AAC/B,IAAA,OAAOlB,kBAAP,CAAA;AACD,GAAA;;EACD,MAAMmB,cAAc,GAAGlB,WAAW,CAACgB,IAAI,CAACE,cAAN,CAAX,CAAiCb,QAAjC,EAAvB,CAAA;EACA,OAAOc,IAAI,CAACC,IAAL,CACLrB,kBAAkB,GAChB,CADF,GAEEmB,cAAc,GAAGR,gBAFnB,GAGE,CAHF,GAIE,CAAKQ,IAAAA,cAAc,GAAG,CAAjB,GAAqB,CAA1B,CALG,CAAP,CAAA;AAOD,CAAA;AAEYG,MAAAA,gCAAgC,GAC3CC,mBAD8C,IAEnC;EACX,OAAOA,mBAAmB,CAACC,QAApB,EAAA,CAA+BzB,KAA/B,CAAqC,CAArC,EAAwC,CAAxC,CAAP,CAAA;AACD;;;;"}