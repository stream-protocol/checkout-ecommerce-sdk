{"version":3,"file":"findTokenWithMintByAddress.mjs","sources":["../../../../../src/plugins/tokenModule/operations/findTokenWithMintByAddress.ts"],"sourcesContent":["import type { PublicKey } from '@solana/web3.js';\nimport { toMintAccount, toTokenAccount } from '../accounts';\nimport { toMint } from '../models/Mint';\nimport { TokenWithMint, toTokenWithMint } from '../models/Token';\nimport {\n  Operation,\n  OperationHandler,\n  OperationScope,\n  useOperation,\n} from '@/types';\nimport { Metaplex } from '@/Metaplex';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindTokenWithMintByAddressOperation' as const;\n\n/**\n * Finds a token account and its associated mint account\n * by providing the token address.\n *\n * ```ts\n * const tokenWithMint = await metaplex.tokens().findTokenWithMintByAddress({ address });\n * ```\n *\n * @group Operations\n * @category Constructors\n */\nexport const findTokenWithMintByAddressOperation =\n  useOperation<FindTokenWithMintByAddressOperation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type FindTokenWithMintByAddressOperation = Operation<\n  typeof Key,\n  FindTokenWithMintByAddressInput,\n  TokenWithMint\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type FindTokenWithMintByAddressInput = {\n  /** The address of the token account. */\n  address: PublicKey;\n};\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const findTokenWithMintByAddressOperationHandler: OperationHandler<FindTokenWithMintByAddressOperation> =\n  {\n    handle: async (\n      operation: FindTokenWithMintByAddressOperation,\n      metaplex: Metaplex,\n      scope: OperationScope\n    ): Promise<TokenWithMint> => {\n      const { commitment } = scope;\n      const { address } = operation.input;\n\n      const tokenAccount = toTokenAccount(\n        await metaplex.rpc().getAccount(address, commitment)\n      );\n\n      const mintAccount = toMintAccount(\n        await metaplex.rpc().getAccount(tokenAccount.data.mint, commitment)\n      );\n\n      return toTokenWithMint(tokenAccount, toMint(mintAccount));\n    },\n  };\n"],"names":["Key","findTokenWithMintByAddressOperation","useOperation","findTokenWithMintByAddressOperationHandler","handle","operation","metaplex","scope","commitment","address","input","tokenAccount","toTokenAccount","rpc","getAccount","mintAccount","toMintAccount","data","mint","toTokenWithMint","toMint"],"mappings":";;;;;AAYA;AACA;AACA;AAEA,MAAMA,GAAG,GAAG,qCAAZ,CAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MACaC,mCAAmC,GAC9CC,YAAY,CAAsCF,GAAtC,EADP;AAGP;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACO,MAAMG,0CAAiG,GAC5G;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIqB;IAC3B,MAAM;AAAEC,MAAAA,UAAAA;AAAF,KAAA,GAAiBD,KAAvB,CAAA;IACA,MAAM;AAAEE,MAAAA,OAAAA;KAAYJ,GAAAA,SAAS,CAACK,KAA9B,CAAA;AAEA,IAAA,MAAMC,YAAY,GAAGC,cAAc,CACjC,MAAMN,QAAQ,CAACO,GAAT,EAAA,CAAeC,UAAf,CAA0BL,OAA1B,EAAmCD,UAAnC,CAD2B,CAAnC,CAAA;AAIA,IAAA,MAAMO,WAAW,GAAGC,aAAa,CAC/B,MAAMV,QAAQ,CAACO,GAAT,EAAA,CAAeC,UAAf,CAA0BH,YAAY,CAACM,IAAb,CAAkBC,IAA5C,EAAkDV,UAAlD,CADyB,CAAjC,CAAA;IAIA,OAAOW,eAAe,CAACR,YAAD,EAAeS,MAAM,CAACL,WAAD,CAArB,CAAtB,CAAA;AACD,GAAA;AAlBH;;;;"}