{"version":3,"file":"CandyMachineClient.mjs","sources":["../../../../src/plugins/candyMachineModule/CandyMachineClient.ts"],"sourcesContent":["import { CandyMachineBuildersClient } from './CandyMachineBuildersClient';\nimport { CandyMachineGuardsClient } from './CandyMachineGuardsClient';\nimport { CandyMachinePdasClient } from './CandyMachinePdasClient';\nimport {\n  CandyGuardsMintSettings,\n  CandyGuardsRouteSettings,\n  CandyGuardsSettings,\n  DefaultCandyGuardMintSettings,\n  DefaultCandyGuardRouteSettings,\n  DefaultCandyGuardSettings,\n} from './guards';\nimport { CandyGuard, CandyMachine, isCandyMachine } from './models';\nimport {\n  CallCandyGuardRouteInput,\n  callCandyGuardRouteOperation,\n  CreateCandyGuardInput,\n  createCandyGuardOperation,\n  CreateCandyMachineInput,\n  createCandyMachineOperation,\n  DeleteCandyGuardInput,\n  deleteCandyGuardOperation,\n  DeleteCandyMachineInput,\n  deleteCandyMachineOperation,\n  FindCandyGuardByAddressInput,\n  findCandyGuardByAddressOperation,\n  FindCandyGuardsByAuthorityInput,\n  findCandyGuardsByAuthorityOperation,\n  FindCandyMachineByAddressInput,\n  findCandyMachineByAddressOperation,\n  InsertCandyMachineItemsInput,\n  insertCandyMachineItemsOperation,\n  MintFromCandyMachineInput,\n  mintFromCandyMachineOperation,\n  UnwrapCandyGuardInput,\n  unwrapCandyGuardOperation,\n  UpdateCandyGuardInput,\n  updateCandyGuardOperation,\n  UpdateCandyMachineInput,\n  updateCandyMachineOperation,\n  WrapCandyGuardInput,\n  wrapCandyGuardOperation,\n} from './operations';\nimport {\n  UpdateCandyGuardAuthorityInput,\n  updateCandyGuardAuthorityOperation,\n} from './operations/updateCandyGuardAuthority';\nimport { OperationOptions, toPublicKey } from '@/types';\nimport type { Metaplex } from '@/Metaplex';\n\n/**\n * This is a client for the Candy Machine V3 module.\n *\n * It enables us to interact with the Candy Machine V3 and Candy Guard programs\n * in order to create, update, delete and mint from Candy Machines as well as\n * registering your own custom Candy Guards.\n *\n * You may access this client via the `candyMachines()` method of your `Metaplex` instance.\n *\n * ```ts\n * const candyMachineClient = metaplex.candyMachines();\n * ```\n *\n * @example\n * You can create a new Candy Machine with minimum input like so.\n * By default, the current identity of the Metaplex instance will be\n * the authority of the Candy Machine and it will immediately create\n * a Candy Guard linked to the new Candy Machine.\n *\n * ```ts\n *  const { candyMachine } = await metaplex\n *    .candyMachines()\n *    .create({\n *      itemsAvailable: toBigNumber(5000),\n *      sellerFeeBasisPoints: 333, // 3.33%\n *      collection: {\n *        address: collectionNft.address,\n *        updateAuthority: collectionUpdateAuthority,\n *      },\n *    });\n * ```\n *\n * @see {@link CandyGuard} The `CandyGuard` model\n * @group Modules\n */\nexport class CandyMachineClient {\n  protected readonly guardsClient: CandyMachineGuardsClient;\n\n  constructor(readonly metaplex: Metaplex) {\n    this.guardsClient = new CandyMachineGuardsClient(metaplex);\n  }\n\n  /**\n   * You may use the `guards()` client to access the default guards\n   * available as well as register your own guards.\n   *\n   * ```ts\n   * const guardsClient = metaplex.candyMachines().guards();\n   * ```\n   */\n  guards() {\n    return this.guardsClient;\n  }\n\n  /**\n   * You may use the `builders()` client to access the\n   * underlying Transaction Builders of this module.\n   *\n   * ```ts\n   * const buildersClient = metaplex.candyMachines().builders();\n   * ```\n   */\n  builders() {\n    return new CandyMachineBuildersClient(this.metaplex);\n  }\n\n  /**\n   * You may use the `pdas()` client to build PDAs related to this module.\n   *\n   * ```ts\n   * const pdasClient = metaplex.candyMachines().pdas();\n   * ```\n   */\n  pdas() {\n    return new CandyMachinePdasClient(this.metaplex);\n  }\n\n  /** {@inheritDoc callCandyGuardRouteOperation} */\n  callGuardRoute<\n    Guard extends keyof RouteSettings & string,\n    Settings extends CandyGuardsSettings = DefaultCandyGuardSettings,\n    RouteSettings extends CandyGuardsRouteSettings = DefaultCandyGuardRouteSettings\n  >(\n    input: CallCandyGuardRouteInput<\n      Guard,\n      Settings extends undefined ? DefaultCandyGuardSettings : Settings,\n      RouteSettings extends undefined\n        ? DefaultCandyGuardRouteSettings\n        : RouteSettings\n    >,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(callCandyGuardRouteOperation(input), options);\n  }\n\n  /** {@inheritDoc createCandyMachineOperation} */\n  create<T extends CandyGuardsSettings = DefaultCandyGuardSettings>(\n    input: CreateCandyMachineInput<\n      T extends undefined ? DefaultCandyGuardSettings : T\n    >,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(createCandyMachineOperation(input), options);\n  }\n\n  /** {@inheritDoc createCandyGuardOperation} */\n  createCandyGuard<T extends CandyGuardsSettings = DefaultCandyGuardSettings>(\n    input: CreateCandyGuardInput<\n      T extends undefined ? DefaultCandyGuardSettings : T\n    >,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(createCandyGuardOperation(input), options);\n  }\n\n  /** {@inheritDoc deleteCandyMachineOperation} */\n  delete(input: DeleteCandyMachineInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(deleteCandyMachineOperation(input), options);\n  }\n\n  /** {@inheritDoc deleteCandyGuardOperation} */\n  deleteCandyGuard(input: DeleteCandyGuardInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(deleteCandyGuardOperation(input), options);\n  }\n\n  /** {@inheritDoc findCandyGuardsByAuthorityOperation} */\n  findAllCandyGuardsByAuthority<\n    T extends CandyGuardsSettings = DefaultCandyGuardSettings\n  >(input: FindCandyGuardsByAuthorityInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(findCandyGuardsByAuthorityOperation<T>(input), options);\n  }\n\n  /** {@inheritDoc findCandyMachineByAddressOperation} */\n  findByAddress<T extends CandyGuardsSettings = DefaultCandyGuardSettings>(\n    input: FindCandyMachineByAddressInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(findCandyMachineByAddressOperation<T>(input), options);\n  }\n\n  /** {@inheritDoc findCandyGuardByAddressOperation} */\n  findCandyGuardByAddress<\n    T extends CandyGuardsSettings = DefaultCandyGuardSettings\n  >(input: FindCandyGuardByAddressInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(findCandyGuardByAddressOperation<T>(input), options);\n  }\n\n  /**\n   * Helper method that fetches a Candy Guard via the base\n   * address used to derived its PDA.\n   *\n   * ```ts\n   * const candyGuard = await metaplex\n   *   .candyMachines()\n   *   .findCandyGuardByBaseAddress({ address: base });\n   * ```\n   */\n  findCandyGuardByBaseAddress<\n    T extends CandyGuardsSettings = DefaultCandyGuardSettings\n  >(input: FindCandyGuardByAddressInput, options?: OperationOptions) {\n    const address = this.pdas().candyGuard({ base: input.address });\n    return this.findCandyGuardByAddress<T>({ ...input, address }, options);\n  }\n\n  /** {@inheritDoc insertCandyMachineItemsOperation} */\n  insertItems(input: InsertCandyMachineItemsInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(insertCandyMachineItemsOperation(input), options);\n  }\n\n  /** {@inheritDoc mintFromCandyMachineOperation} */\n  mint<\n    Settings extends CandyGuardsSettings = DefaultCandyGuardSettings,\n    MintSettings extends CandyGuardsMintSettings = DefaultCandyGuardMintSettings\n  >(\n    input: MintFromCandyMachineInput<\n      Settings extends undefined ? DefaultCandyGuardSettings : Settings,\n      MintSettings extends undefined\n        ? DefaultCandyGuardMintSettings\n        : MintSettings\n    >,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(mintFromCandyMachineOperation(input), options);\n  }\n\n  /**\n   * Helper method that refetches a given Candy Machine or Candy Guard.\n   *\n   * ```ts\n   * const candyMachine = await metaplex.candyMachines().refresh(candyMachine);\n   * const candyGuard = await metaplex.candyMachines().refresh(candyGuard);\n   * ```\n   */\n  async refresh<\n    T extends CandyGuardsSettings,\n    M extends CandyMachine<T> | CandyGuard<T>\n  >(model: M, options?: OperationOptions): Promise<M> {\n    const input = { address: toPublicKey(model) };\n    const refreshedModel = isCandyMachine(model)\n      ? await this.findByAddress<T>(input, options)\n      : await this.findCandyGuardByAddress<T>(input, options);\n\n    return refreshedModel as M;\n  }\n\n  /** {@inheritDoc unwrapCandyGuardOperation} */\n  unwrapCandyGuard(input: UnwrapCandyGuardInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(unwrapCandyGuardOperation(input), options);\n  }\n\n  /** {@inheritDoc updateCandyMachineOperation} */\n  update<T extends CandyGuardsSettings = DefaultCandyGuardSettings>(\n    input: UpdateCandyMachineInput<\n      T extends undefined ? DefaultCandyGuardSettings : T\n    >,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(updateCandyMachineOperation(input), options);\n  }\n\n  /** {@inheritDoc updateCandyGuardOperation} */\n  updateCandyGuard<T extends CandyGuardsSettings = DefaultCandyGuardSettings>(\n    input: UpdateCandyGuardInput<\n      T extends undefined ? DefaultCandyGuardSettings : T\n    >,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(updateCandyGuardOperation(input), options);\n  }\n\n  /** {@inheritDoc updateCandyGuardAuthorityOperation} */\n  updateCandyGuardAuthority(\n    input: UpdateCandyGuardAuthorityInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(updateCandyGuardAuthorityOperation(input), options);\n  }\n\n  /** {@inheritDoc wrapCandyGuardOperation} */\n  wrapCandyGuard(input: WrapCandyGuardInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(wrapCandyGuardOperation(input), options);\n  }\n}\n"],"names":["CandyMachineClient","constructor","metaplex","guardsClient","CandyMachineGuardsClient","guards","builders","CandyMachineBuildersClient","pdas","CandyMachinePdasClient","callGuardRoute","input","options","operations","execute","callCandyGuardRouteOperation","create","createCandyMachineOperation","createCandyGuard","createCandyGuardOperation","delete","deleteCandyMachineOperation","deleteCandyGuard","deleteCandyGuardOperation","findAllCandyGuardsByAuthority","findCandyGuardsByAuthorityOperation","findByAddress","findCandyMachineByAddressOperation","findCandyGuardByAddress","findCandyGuardByAddressOperation","findCandyGuardByBaseAddress","address","candyGuard","base","insertItems","insertCandyMachineItemsOperation","mint","mintFromCandyMachineOperation","refresh","model","toPublicKey","refreshedModel","isCandyMachine","unwrapCandyGuard","unwrapCandyGuardOperation","update","updateCandyMachineOperation","updateCandyGuard","updateCandyGuardOperation","updateCandyGuardAuthority","updateCandyGuardAuthorityOperation","wrapCandyGuard","wrapCandyGuardOperation"],"mappings":"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"}