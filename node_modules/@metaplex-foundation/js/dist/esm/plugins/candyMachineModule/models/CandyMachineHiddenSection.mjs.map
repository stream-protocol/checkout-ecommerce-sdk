{"version":3,"file":"CandyMachineHiddenSection.mjs","sources":["../../../../../src/plugins/candyMachineModule/models/CandyMachineHiddenSection.ts"],"sourcesContent":["import * as beet from '@metaplex-foundation/beet';\nimport { CandyMachineConfigLineSettings, CandyMachineItem } from '..';\nimport { deserializeFeatureFlags } from '@/types';\nimport { removeEmptyChars } from '@/utils';\n\n/** @internal */\nexport type CandyMachineHiddenSection = {\n  itemsLoaded: number;\n  items: CandyMachineItem[];\n  itemsLoadedMap: boolean[];\n  itemsLeftToMint: number[];\n};\n\n/** @internal */\nexport const deserializeCandyMachineHiddenSection = (\n  buffer: Buffer,\n  itemsAvailable: number,\n  itemsRemaining: number,\n  configLineSettings: CandyMachineConfigLineSettings,\n  offset = 0\n): CandyMachineHiddenSection => {\n  // Items loaded.\n  const itemsLoaded = beet.u32.read(buffer, offset);\n  offset += 4;\n\n  // Raw config lines.\n  const { nameLength } = configLineSettings;\n  const { uriLength } = configLineSettings;\n  const configLineSize = nameLength + uriLength;\n  const configLinesSize = configLineSize * itemsAvailable;\n  const rawConfigLines = buffer.slice(offset, offset + configLinesSize);\n  offset += configLinesSize;\n\n  // Items loaded map.\n  const itemsLoadedBuffer = buffer.slice(offset, offset + itemsAvailable);\n  const itemsLoadedMap = deserializeFeatureFlags(\n    itemsLoadedBuffer,\n    itemsAvailable\n  );\n  const itemsLoadedMapSize = Math.floor(itemsAvailable / 8) + 1;\n  offset += itemsLoadedMapSize;\n\n  // Items left to mint for random order only.\n  const itemsLeftToMint = beet\n    .uniformFixedSizeArray(beet.u32, itemsAvailable)\n    .read(buffer, offset)\n    .slice(0, itemsRemaining);\n\n  // Helper function to figure out if an item has been minted.\n  const itemsMinted = itemsAvailable - itemsRemaining;\n  const isMinted = (index: number): boolean =>\n    configLineSettings.isSequential\n      ? index < itemsMinted\n      : !itemsLeftToMint.includes(index);\n\n  // Parse config lines.\n  const items: CandyMachineItem[] = [];\n  itemsLoadedMap.forEach((loaded, index) => {\n    if (!loaded) return;\n\n    const namePosition = index * configLineSize;\n    const uriPosition = namePosition + nameLength;\n    const name = rawConfigLines\n      .slice(namePosition, namePosition + nameLength)\n      .toString('utf8');\n    const uri = rawConfigLines\n      .slice(uriPosition, uriPosition + uriLength)\n      .toString('utf8');\n\n    const prefixName = replaceCandyMachineItemPattern(\n      configLineSettings.prefixName,\n      index\n    );\n    const prefixUri = replaceCandyMachineItemPattern(\n      configLineSettings.prefixUri,\n      index\n    );\n\n    items.push({\n      index,\n      minted: isMinted(index),\n      name: prefixName + removeEmptyChars(name),\n      uri: prefixUri + removeEmptyChars(uri),\n    });\n  });\n\n  return {\n    itemsLoaded,\n    items,\n    itemsLoadedMap,\n    itemsLeftToMint,\n  };\n};\n\n/** @internal */\nexport const replaceCandyMachineItemPattern = (\n  value: string,\n  index: number\n): string => {\n  return value.replace('$ID+1$', `${index + 1}`).replace('$ID$', `${index}`);\n};\n"],"names":["deserializeCandyMachineHiddenSection","buffer","itemsAvailable","itemsRemaining","configLineSettings","offset","itemsLoaded","beet","u32","read","nameLength","uriLength","configLineSize","configLinesSize","rawConfigLines","slice","itemsLoadedBuffer","itemsLoadedMap","deserializeFeatureFlags","itemsLoadedMapSize","Math","floor","itemsLeftToMint","uniformFixedSizeArray","itemsMinted","isMinted","index","isSequential","includes","items","forEach","loaded","namePosition","uriPosition","name","toString","uri","prefixName","replaceCandyMachineItemPattern","prefixUri","push","minted","removeEmptyChars","value","replace"],"mappings":"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"}