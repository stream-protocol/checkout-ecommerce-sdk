{"version":3,"file":"findMintedNftsByCandyMachineV2.cjs","sources":["../../../../../src/plugins/candyMachineV2Module/operations/findMintedNftsByCandyMachineV2.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport { Metadata, Nft } from '../../nftModule';\nimport { findCandyMachineV2CreatorPda } from '../pdas';\nimport {\n  Operation,\n  OperationHandler,\n  OperationScope,\n  useOperation,\n} from '@/types';\nimport { Metaplex } from '@/Metaplex';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindMintedNftsByCandyMachineV2Operation' as const;\n\n/**\n * Find all minted NFTs from a given Candy Machine address.\n *\n * ```ts\n * const nfts = await metaplex\n *   .candyMachinesV2()\n *   .findMintedNfts({ candyMachine };\n * ```\n *\n * @group Operations\n * @category Constructors\n */\nexport const findMintedNftsByCandyMachineV2Operation =\n  useOperation<FindMintedNftsByCandyMachineV2Operation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type FindMintedNftsByCandyMachineV2Operation = Operation<\n  typeof Key,\n  FindMintedNftsByCandyMachineV2Input,\n  FindMintedNftsByCandyMachineV2Output\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type FindMintedNftsByCandyMachineV2Input = {\n  /** The Candy Machine address. */\n  candyMachine: PublicKey;\n\n  /**\n   * The Candy Machine version\n   *\n   * @defaultValue `2`\n   */\n  version?: 1 | 2;\n};\n\n/**\n * @group Operations\n * @category Outputs\n */\nexport type FindMintedNftsByCandyMachineV2Output = (Metadata | Nft)[];\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const findMintedNftsByCandyMachineV2OperationHandler: OperationHandler<FindMintedNftsByCandyMachineV2Operation> =\n  {\n    handle: async (\n      operation: FindMintedNftsByCandyMachineV2Operation,\n      metaplex: Metaplex,\n      scope: OperationScope\n    ) => {\n      const { candyMachine, version = 2 } = operation.input;\n      const firstCreator =\n        version === 2\n          ? findCandyMachineV2CreatorPda(candyMachine)\n          : candyMachine;\n\n      const mintedNfts = await metaplex\n        .nfts()\n        .findAllByCreator({ creator: firstCreator, position: 1 }, scope);\n\n      return mintedNfts as (Nft | Metadata)[];\n    },\n  };\n"],"names":["Key","findMintedNftsByCandyMachineV2Operation","useOperation","findMintedNftsByCandyMachineV2OperationHandler","handle","operation","metaplex","scope","candyMachine","version","input","firstCreator","findCandyMachineV2CreatorPda","mintedNfts","nfts","findAllByCreator","creator","position"],"mappings":";;;;;;;AAWA;AACA;AACA;AAEA,MAAMA,GAAG,GAAG,yCAAZ,CAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MACaC,uCAAuC,GAClDC,sBAAY,CAA0CF,GAA1C,EADP;AAGP;AACA;AACA;AACA;;AA6BA;AACA;AACA;AACA;AACO,MAAMG,8CAAyG,GACpH;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIH;IACH,MAAM;MAAEC,YAAF;AAAgBC,MAAAA,OAAO,GAAG,CAAA;KAAMJ,GAAAA,SAAS,CAACK,KAAhD,CAAA;IACA,MAAMC,YAAY,GAChBF,OAAO,KAAK,CAAZ,GACIG,iCAA4B,CAACJ,YAAD,CADhC,GAEIA,YAHN,CAAA;IAKA,MAAMK,UAAU,GAAG,MAAMP,QAAQ,CAC9BQ,IADsB,EAAA,CAEtBC,gBAFsB,CAEL;AAAEC,MAAAA,OAAO,EAAEL,YAAX;AAAyBM,MAAAA,QAAQ,EAAE,CAAA;KAF9B,EAEmCV,KAFnC,CAAzB,CAAA;AAIA,IAAA,OAAOM,UAAP,CAAA;AACD,GAAA;AAjBH;;;;;"}