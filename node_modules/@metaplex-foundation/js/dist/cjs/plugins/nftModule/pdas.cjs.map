{"version":3,"file":"pdas.cjs","sources":["../../../../src/plugins/nftModule/pdas.ts"],"sourcesContent":["import { Buffer } from 'buffer';\nimport { PublicKey } from '@solana/web3.js';\nimport { PROGRAM_ID } from '@metaplex-foundation/mpl-token-metadata';\nimport { BigNumber, Pda, toBigNumber } from '@/types';\n\n/**\n * @group Pdas\n * @deprecated Please use `metaplex.nfts().pdas().metadata(...)` instead.\n */\nexport const findMetadataPda = (\n  mint: PublicKey,\n  programId: PublicKey = PROGRAM_ID\n): Pda => {\n  return Pda.find(programId, [\n    Buffer.from('metadata', 'utf8'),\n    programId.toBuffer(),\n    mint.toBuffer(),\n  ]);\n};\n\n/**\n * @group Pdas\n * @deprecated Please use `metaplex.nfts().pdas().masterEdition(...)` instead.\n */\nexport const findMasterEditionV2Pda = (\n  mint: PublicKey,\n  programId: PublicKey = PROGRAM_ID\n): Pda => {\n  return Pda.find(programId, [\n    Buffer.from('metadata', 'utf8'),\n    programId.toBuffer(),\n    mint.toBuffer(),\n    Buffer.from('edition', 'utf8'),\n  ]);\n};\n\n/**\n * @group Pdas\n * @deprecated Please use `metaplex.nfts().pdas().edition(...)` instead.\n */\nexport const findEditionPda = (\n  mint: PublicKey,\n  programId: PublicKey = PROGRAM_ID\n): Pda => {\n  return Pda.find(programId, [\n    Buffer.from('metadata', 'utf8'),\n    programId.toBuffer(),\n    mint.toBuffer(),\n    Buffer.from('edition', 'utf8'),\n  ]);\n};\n\n/**\n * @group Pdas\n * @deprecated Please use `metaplex.nfts().pdas().editionMarker(...)` instead.\n */\nexport const findEditionMarkerPda = (\n  mint: PublicKey,\n  edition: BigNumber,\n  programId: PublicKey = PROGRAM_ID\n): Pda => {\n  return Pda.find(programId, [\n    Buffer.from('metadata', 'utf8'),\n    programId.toBuffer(),\n    mint.toBuffer(),\n    Buffer.from('edition', 'utf8'),\n    Buffer.from(edition.div(toBigNumber(248)).toString()),\n  ]);\n};\n\n/**\n * @group Pdas\n * @deprecated Please use `metaplex.nfts().pdas().collectionAuthorityRecord(...)` instead.\n */\nexport const findCollectionAuthorityRecordPda = (\n  mint: PublicKey,\n  collectionAuthority: PublicKey,\n  programId: PublicKey = PROGRAM_ID\n): Pda => {\n  return Pda.find(programId, [\n    Buffer.from('metadata', 'utf8'),\n    programId.toBuffer(),\n    mint.toBuffer(),\n    Buffer.from('collection_authority', 'utf8'),\n    collectionAuthority.toBuffer(),\n  ]);\n};\n\n/**\n * @group Pdas\n * @deprecated Please use `metaplex.nfts().pdas().useAuthorityRecord(...)` instead.\n */\nexport const findUseAuthorityRecordPda = (\n  mint: PublicKey,\n  useAuthority: PublicKey,\n  programId: PublicKey = PROGRAM_ID\n): Pda => {\n  return Pda.find(programId, [\n    Buffer.from('metadata', 'utf8'),\n    programId.toBuffer(),\n    mint.toBuffer(),\n    Buffer.from('user', 'utf8'),\n    useAuthority.toBuffer(),\n  ]);\n};\n\n/**\n * @group Pdas\n * @deprecated Please use `metaplex.nfts().pdas().burner(...)` instead.\n */\nexport const findProgramAsBurnerPda = (\n  programId: PublicKey = PROGRAM_ID\n): Pda => {\n  return Pda.find(programId, [\n    Buffer.from('metadata', 'utf8'),\n    programId.toBuffer(),\n    Buffer.from('burn', 'utf8'),\n  ]);\n};\n"],"names":["findMetadataPda","mint","programId","PROGRAM_ID","Pda","find","Buffer","from","toBuffer","findMasterEditionV2Pda","findEditionPda","findEditionMarkerPda","edition","div","toBigNumber","toString","findCollectionAuthorityRecordPda","collectionAuthority","findUseAuthorityRecordPda","useAuthority","findProgramAsBurnerPda"],"mappings":"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"}