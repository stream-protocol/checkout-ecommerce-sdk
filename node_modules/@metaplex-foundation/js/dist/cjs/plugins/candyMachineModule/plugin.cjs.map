{"version":3,"file":"plugin.cjs","sources":["../../../../src/plugins/candyMachineModule/plugin.ts"],"sourcesContent":["import { ProgramClient } from '../programModule';\nimport { CandyMachineClient } from './CandyMachineClient';\nimport {\n  addressGateGuardManifest,\n  allowListGuardManifest,\n  botTaxGuardManifest,\n  endDateGuardManifest,\n  gatekeeperGuardManifest,\n  mintLimitGuardManifest,\n  nftBurnGuardManifest,\n  nftGateGuardManifest,\n  nftPaymentGuardManifest,\n  programGateGuardManifest,\n  redeemedAmountGuardManifest,\n  solPaymentGuardManifest,\n  startDateGuardManifest,\n  thirdPartySignerGuardManifest,\n  tokenBurnGuardManifest,\n  tokenGateGuardManifest,\n  tokenPaymentGuardManifest,\n} from './guards';\nimport {\n  CallCandyGuardRouteOperation,\n  callCandyGuardRouteOperation,\n  callCandyGuardRouteOperationHandler,\n  createCandyGuardOperation,\n  createCandyGuardOperationHandler,\n  createCandyMachineOperation,\n  createCandyMachineOperationHandler,\n  deleteCandyGuardOperation,\n  deleteCandyGuardOperationHandler,\n  deleteCandyMachineOperation,\n  deleteCandyMachineOperationHandler,\n  findCandyGuardByAddressOperation,\n  findCandyGuardByAddressOperationHandler,\n  findCandyGuardsByAuthorityOperation,\n  findCandyGuardsByAuthorityOperationHandler,\n  findCandyMachineByAddressOperation,\n  findCandyMachineByAddressOperationHandler,\n  insertCandyMachineItemsOperation,\n  insertCandyMachineItemsOperationHandler,\n  mintFromCandyMachineOperation,\n  mintFromCandyMachineOperationHandler,\n  unwrapCandyGuardOperation,\n  unwrapCandyGuardOperationHandler,\n  updateCandyGuardOperation,\n  updateCandyGuardOperationHandler,\n  updateCandyMachineOperation,\n  updateCandyMachineOperationHandler,\n  wrapCandyGuardOperation,\n  wrapCandyGuardOperationHandler,\n} from './operations';\nimport {\n  CandyGuardProgram,\n  candyMachineProgram,\n  defaultCandyGuardProgram,\n  gatewayProgram,\n} from './programs';\nimport {\n  updateCandyGuardAuthorityOperation,\n  updateCandyGuardAuthorityOperationHandler,\n} from './operations/updateCandyGuardAuthority';\nimport { freezeSolPaymentGuardManifest } from './guards/freezeSolPayment';\nimport { freezeTokenPaymentGuardManifest } from './guards/freezeTokenPayment';\nimport { MetaplexPlugin, OperationConstructor, Program } from '@/types';\nimport type { Metaplex } from '@/Metaplex';\n\n/** @group Plugins */\nexport const candyMachineModule = (): MetaplexPlugin => ({\n  install(metaplex: Metaplex) {\n    // Client.\n    const client = new CandyMachineClient(metaplex);\n    metaplex.candyMachines = () => client;\n\n    // Candy Machine Program.\n    metaplex.programs().register(candyMachineProgram);\n    metaplex.programs().getCandyMachine = function (\n      this: ProgramClient,\n      programs?: Program[]\n    ) {\n      return this.get(candyMachineProgram.name, programs);\n    };\n\n    // Candy Guard Program.\n    metaplex.programs().register(defaultCandyGuardProgram);\n    metaplex.programs().getCandyGuard = function <T extends CandyGuardProgram>(\n      this: ProgramClient,\n      programs?: Program[]\n    ): T {\n      return this.get(defaultCandyGuardProgram.name, programs);\n    };\n\n    // Gateway Program.\n    metaplex.programs().register(gatewayProgram);\n    metaplex.programs().getGateway = function (\n      this: ProgramClient,\n      programs?: Program[]\n    ) {\n      return this.get(gatewayProgram.name, programs);\n    };\n\n    // Default Guards.\n    client.guards().register(botTaxGuardManifest);\n    client.guards().register(solPaymentGuardManifest);\n    client.guards().register(tokenPaymentGuardManifest);\n    client.guards().register(startDateGuardManifest);\n    client.guards().register(thirdPartySignerGuardManifest);\n    client.guards().register(tokenGateGuardManifest);\n    client.guards().register(gatekeeperGuardManifest);\n    client.guards().register(endDateGuardManifest);\n    client.guards().register(allowListGuardManifest);\n    client.guards().register(mintLimitGuardManifest);\n    client.guards().register(nftPaymentGuardManifest);\n    client.guards().register(redeemedAmountGuardManifest);\n    client.guards().register(addressGateGuardManifest);\n    client.guards().register(nftGateGuardManifest);\n    client.guards().register(nftBurnGuardManifest);\n    client.guards().register(tokenBurnGuardManifest);\n    client.guards().register(freezeSolPaymentGuardManifest);\n    client.guards().register(freezeTokenPaymentGuardManifest);\n    client.guards().register(programGateGuardManifest);\n\n    // Operations.\n    const op = metaplex.operations();\n    op.register(\n      callCandyGuardRouteOperation as OperationConstructor<\n        CallCandyGuardRouteOperation<any>\n      >,\n      callCandyGuardRouteOperationHandler\n    );\n    op.register(createCandyGuardOperation, createCandyGuardOperationHandler);\n    op.register(\n      createCandyMachineOperation,\n      createCandyMachineOperationHandler\n    );\n    op.register(deleteCandyGuardOperation, deleteCandyGuardOperationHandler);\n    op.register(\n      deleteCandyMachineOperation,\n      deleteCandyMachineOperationHandler\n    );\n    op.register(\n      findCandyGuardByAddressOperation,\n      findCandyGuardByAddressOperationHandler\n    );\n    op.register(\n      findCandyGuardsByAuthorityOperation,\n      findCandyGuardsByAuthorityOperationHandler\n    );\n    op.register(\n      findCandyMachineByAddressOperation,\n      findCandyMachineByAddressOperationHandler\n    );\n    op.register(\n      insertCandyMachineItemsOperation,\n      insertCandyMachineItemsOperationHandler\n    );\n    op.register(\n      mintFromCandyMachineOperation,\n      mintFromCandyMachineOperationHandler\n    );\n    op.register(unwrapCandyGuardOperation, unwrapCandyGuardOperationHandler);\n    op.register(\n      updateCandyGuardAuthorityOperation,\n      updateCandyGuardAuthorityOperationHandler\n    );\n    op.register(updateCandyGuardOperation, updateCandyGuardOperationHandler);\n    op.register(\n      updateCandyMachineOperation,\n      updateCandyMachineOperationHandler\n    );\n    op.register(wrapCandyGuardOperation, wrapCandyGuardOperationHandler);\n  },\n});\n\ndeclare module '../../Metaplex' {\n  interface Metaplex {\n    candyMachines(): CandyMachineClient;\n  }\n}\n\ndeclare module '../programModule/ProgramClient' {\n  interface ProgramClient {\n    getCandyMachine(programs?: Program[]): Program;\n    getCandyGuard<T extends CandyGuardProgram>(programs?: Program[]): T;\n    getGateway(programs?: Program[]): Program;\n  }\n}\n"],"names":["candyMachineModule","install","metaplex","client","CandyMachineClient","candyMachines","programs","register","candyMachineProgram","getCandyMachine","get","name","defaultCandyGuardProgram","getCandyGuard","gatewayProgram","getGateway","guards","botTaxGuardManifest","solPaymentGuardManifest","tokenPaymentGuardManifest","startDateGuardManifest","thirdPartySignerGuardManifest","tokenGateGuardManifest","gatekeeperGuardManifest","endDateGuardManifest","allowListGuardManifest","mintLimitGuardManifest","nftPaymentGuardManifest","redeemedAmountGuardManifest","addressGateGuardManifest","nftGateGuardManifest","nftBurnGuardManifest","tokenBurnGuardManifest","freezeSolPaymentGuardManifest","freezeTokenPaymentGuardManifest","programGateGuardManifest","op","operations","callCandyGuardRouteOperation","callCandyGuardRouteOperationHandler","createCandyGuardOperation","createCandyGuardOperationHandler","createCandyMachineOperation","createCandyMachineOperationHandler","deleteCandyGuardOperation","deleteCandyGuardOperationHandler","deleteCandyMachineOperation","deleteCandyMachineOperationHandler","findCandyGuardByAddressOperation","findCandyGuardByAddressOperationHandler","findCandyGuardsByAuthorityOperation","findCandyGuardsByAuthorityOperationHandler","findCandyMachineByAddressOperation","findCandyMachineByAddressOperationHandler","insertCandyMachineItemsOperation","insertCandyMachineItemsOperationHandler","mintFromCandyMachineOperation","mintFromCandyMachineOperationHandler","unwrapCandyGuardOperation","unwrapCandyGuardOperationHandler","updateCandyGuardAuthorityOperation","updateCandyGuardAuthorityOperationHandler","updateCandyGuardOperation","updateCandyGuardOperationHandler","updateCandyMachineOperation","updateCandyMachineOperationHandler","wrapCandyGuardOperation","wrapCandyGuardOperationHandler"],"mappings":"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"}