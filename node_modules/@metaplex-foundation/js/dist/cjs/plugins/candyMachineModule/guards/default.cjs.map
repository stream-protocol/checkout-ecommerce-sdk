{"version":3,"file":"default.cjs","sources":["../../../../../src/plugins/candyMachineModule/guards/default.ts"],"sourcesContent":["import { AddressGateGuardSettings } from './addressGate';\nimport {\n  AllowListGuardRouteSettings,\n  AllowListGuardSettings,\n} from './allowList';\nimport { BotTaxGuardSettings } from './botTax';\nimport {\n  CandyGuardsMintSettings,\n  CandyGuardsRouteSettings,\n  CandyGuardsSettings,\n} from './core';\nimport { EndDateGuardSettings } from './endDate';\nimport {\n  GatekeeperGuardMintSettings,\n  GatekeeperGuardSettings,\n} from './gatekeeper';\nimport { MintLimitGuardSettings } from './mintLimit';\nimport { NftBurnGuardMintSettings, NftBurnGuardSettings } from './nftBurn';\nimport { NftGateGuardMintSettings, NftGateGuardSettings } from './nftGate';\nimport {\n  NftPaymentGuardMintSettings,\n  NftPaymentGuardSettings,\n} from './nftPayment';\nimport { ProgramGateGuardSettings } from './programGate';\nimport { RedeemedAmountGuardSettings } from './redeemedAmount';\nimport { SolPaymentGuardSettings } from './solPayment';\nimport { StartDateGuardSettings } from './startDate';\nimport {\n  ThirdPartySignerGuardMintSettings,\n  ThirdPartySignerGuardSettings,\n} from './thirdPartySigner';\nimport { TokenBurnGuardSettings } from './tokenBurn';\nimport { TokenGateGuardSettings } from './tokenGate';\nimport { TokenPaymentGuardSettings } from './tokenPayment';\nimport {\n  FreezeSolPaymentGuardRouteSettings,\n  FreezeSolPaymentGuardSettings,\n} from './freezeSolPayment';\nimport {\n  FreezeTokenPaymentGuardRouteSettings,\n  FreezeTokenPaymentGuardSettings,\n} from './freezeTokenPayment';\nimport { Option } from '@/utils';\n\n/**\n * The settings for all default Candy Machine guards.\n */\nexport type DefaultCandyGuardSettings = CandyGuardsSettings & {\n  botTax: Option<BotTaxGuardSettings>;\n  solPayment: Option<SolPaymentGuardSettings>;\n  tokenPayment: Option<TokenPaymentGuardSettings>;\n  startDate: Option<StartDateGuardSettings>;\n  thirdPartySigner: Option<ThirdPartySignerGuardSettings>;\n  tokenGate: Option<TokenGateGuardSettings>;\n  gatekeeper: Option<GatekeeperGuardSettings>;\n  endDate: Option<EndDateGuardSettings>;\n  allowList: Option<AllowListGuardSettings>;\n  mintLimit: Option<MintLimitGuardSettings>;\n  nftPayment: Option<NftPaymentGuardSettings>;\n  redeemedAmount: Option<RedeemedAmountGuardSettings>;\n  addressGate: Option<AddressGateGuardSettings>;\n  nftGate: Option<NftGateGuardSettings>;\n  nftBurn: Option<NftBurnGuardSettings>;\n  tokenBurn: Option<TokenBurnGuardSettings>;\n  freezeSolPayment: Option<FreezeSolPaymentGuardSettings>;\n  freezeTokenPayment: Option<FreezeTokenPaymentGuardSettings>;\n  programGate: Option<ProgramGateGuardSettings>;\n};\n\n/**\n * The mint settings for all default Candy Machine guards.\n */\nexport type DefaultCandyGuardMintSettings = CandyGuardsMintSettings & {\n  // botTax: no mint settings\n  // solPayment: no mint settings\n  // tokenPayment: no mint settings\n  // startDate: no mint settings\n  thirdPartySigner: Option<ThirdPartySignerGuardMintSettings>;\n  // tokenGate: no mint settings\n  gatekeeper: Option<GatekeeperGuardMintSettings>;\n  // endDate: no mint settings\n  // allowList: no mint settings\n  // mintLimit: no mint settings\n  nftPayment: Option<NftPaymentGuardMintSettings>;\n  // redeemedAmount: no mint settings\n  // addressGate: no mint settings\n  nftGate: Option<NftGateGuardMintSettings>;\n  nftBurn: Option<NftBurnGuardMintSettings>;\n  // tokenBurn: no mint settings\n  // freezeSolPayment: no mint settings\n  // freezeTokenPayment: no mint settings\n  // programGate: no mint settings\n};\n\n/**\n * The mint settings for all default Candy Machine guards.\n */\nexport type DefaultCandyGuardRouteSettings = CandyGuardsRouteSettings & {\n  // botTax: no route settings\n  // solPayment: no route settings\n  // tokenPayment: no route settings\n  // startDate: no route settings\n  // thirdPartySigner: no route settings\n  // tokenGate: no route settings\n  // gatekeeper: no route settings\n  // endDate: no route settings\n  allowList: AllowListGuardRouteSettings;\n  // mintLimit: no route settings\n  // nftPayment: no route settings\n  // redeemedAmount: no route settings\n  // addressGate: no route settings\n  // nftGate: no route settings\n  // nftBurn: no route settings\n  // tokenBurn: no route settings\n  freezeSolPayment: FreezeSolPaymentGuardRouteSettings;\n  freezeTokenPayment: FreezeTokenPaymentGuardRouteSettings;\n  // programGate: no route settings\n};\n\n/** @internal */\nexport const defaultCandyGuardNames: string[] = [\n  'botTax',\n  'solPayment',\n  'tokenPayment',\n  'startDate',\n  'thirdPartySigner',\n  'tokenGate',\n  'gatekeeper',\n  'endDate',\n  'allowList',\n  'mintLimit',\n  'nftPayment',\n  'redeemedAmount',\n  'addressGate',\n  'nftGate',\n  'nftBurn',\n  'tokenBurn',\n  'freezeSolPayment',\n  'freezeTokenPayment',\n  'programGate',\n];\n\n/** @internal */\nexport const emptyDefaultCandyGuardSettings: {\n  [key in keyof DefaultCandyGuardSettings]: null;\n} = defaultCandyGuardNames.reduce((acc, name) => {\n  acc[name] = null;\n  return acc;\n}, {} as { [key in keyof DefaultCandyGuardSettings]: null });\n"],"names":["defaultCandyGuardNames","emptyDefaultCandyGuardSettings","reduce","acc","name"],"mappings":";;;;AA4CA;AACA;AACA;;AAuBA;AACA;AACA;;AAuBA;AACA;AACA;;AAuBA;MACaA,sBAAgC,GAAG,CAC9C,QAD8C,EAE9C,YAF8C,EAG9C,cAH8C,EAI9C,WAJ8C,EAK9C,kBAL8C,EAM9C,WAN8C,EAO9C,YAP8C,EAQ9C,SAR8C,EAS9C,WAT8C,EAU9C,WAV8C,EAW9C,YAX8C,EAY9C,gBAZ8C,EAa9C,aAb8C,EAc9C,SAd8C,EAe9C,SAf8C,EAgB9C,WAhB8C,EAiB9C,kBAjB8C,EAkB9C,oBAlB8C,EAmB9C,aAnB8C,EAAzC;AAsBP;;AACO,MAAMC,8BAEZ,GAAGD,sBAAsB,CAACE,MAAvB,CAA8B,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC/CD,EAAAA,GAAG,CAACC,IAAD,CAAH,GAAY,IAAZ,CAAA;AACA,EAAA,OAAOD,GAAP,CAAA;AACD,CAHG,EAGD,EAHC;;;;;"}