{"version":3,"file":"loadBid.cjs","sources":["../../../../../src/plugins/auctionHouseModule/operations/loadBid.ts"],"sourcesContent":["import { assertNftOrSftWithToken } from '../../nftModule';\nimport { Bid, LazyBid } from '../models/Bid';\nimport type { Metaplex } from '@/Metaplex';\nimport {\n  amount,\n  Operation,\n  OperationHandler,\n  OperationScope,\n  useOperation,\n} from '@/types';\nimport { assert } from '@/utils';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'LoadBidOperation' as const;\n\n/**\n * Transforms a `LazyBid` model into a `Bid` model.\n *\n * ```ts\n * const bid = await metaplex\n *   .auctionHouse()\n *   .loadBid({ lazyBid };\n * ```\n *\n * @group Operations\n * @category Constructors\n */\nexport const loadBidOperation = useOperation<LoadBidOperation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type LoadBidOperation = Operation<typeof Key, LoadBidInput, Bid>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type LoadBidInput = {\n  /** The `LazyBid` model to transform into the `Bid`.  */\n  lazyBid: LazyBid;\n\n  /**\n   * Whether or not we should fetch the JSON Metadata for the NFT or SFT.\n   *\n   * @defaultValue `true`\n   */\n  loadJsonMetadata?: boolean;\n};\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const loadBidOperationHandler: OperationHandler<LoadBidOperation> = {\n  handle: async (\n    operation: LoadBidOperation,\n    metaplex: Metaplex,\n    scope: OperationScope\n  ) => {\n    const { lazyBid, loadJsonMetadata = true } = operation.input;\n\n    const bid: Omit<Bid, 'asset' | 'tokens'> = {\n      ...lazyBid,\n      model: 'bid',\n      lazy: false,\n    };\n\n    if (lazyBid.tokenAddress) {\n      const asset = await metaplex\n        .nfts()\n        .findByToken({ token: lazyBid.tokenAddress, loadJsonMetadata }, scope);\n      scope.throwIfCanceled();\n\n      assertNftOrSftWithToken(asset);\n      assert(\n        asset.metadataAddress.equals(lazyBid.metadataAddress),\n        `Asset metadata address must be ${lazyBid.metadataAddress}`\n      );\n\n      return {\n        ...bid,\n        isPublic: false,\n        asset,\n        tokens: amount(lazyBid.tokens, asset.mint.currency),\n      };\n    }\n    const asset = await metaplex\n      .nfts()\n      .findByMetadata(\n        { metadata: lazyBid.metadataAddress, loadJsonMetadata },\n        scope\n      );\n    scope.throwIfCanceled();\n\n    return {\n      ...bid,\n      isPublic: true,\n      asset,\n      tokens: amount(lazyBid.tokens, asset.mint.currency),\n    };\n  },\n};\n"],"names":["Key","loadBidOperation","useOperation","loadBidOperationHandler","handle","operation","metaplex","scope","lazyBid","loadJsonMetadata","input","bid","model","lazy","tokenAddress","asset","nfts","findByToken","token","throwIfCanceled","assertNftOrSftWithToken","assert","metadataAddress","equals","isPublic","tokens","amount","mint","currency","findByMetadata","metadata"],"mappings":";;;;;;;;;AAaA;AACA;;AAEA,MAAMA,GAAG,GAAG,kBAAZ,CAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MACaC,gBAAgB,GAAGC,sBAAY,CAAmBF,GAAnB,EAArC;AAEP;AACA;AACA;AACA;;AAmBA;AACA;AACA;AACA;AACO,MAAMG,uBAA2D,GAAG;AACzEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIH;IACH,MAAM;MAAEC,OAAF;AAAWC,MAAAA,gBAAgB,GAAG,IAAA;KAASJ,GAAAA,SAAS,CAACK,KAAvD,CAAA;AAEA,IAAA,MAAMC,GAAkC,GAAG,EACzC,GAAGH,OADsC;AAEzCI,MAAAA,KAAK,EAAE,KAFkC;AAGzCC,MAAAA,IAAI,EAAE,KAAA;KAHR,CAAA;;IAMA,IAAIL,OAAO,CAACM,YAAZ,EAA0B;MACxB,MAAMC,KAAK,GAAG,MAAMT,QAAQ,CACzBU,IADiB,EAAA,CAEjBC,WAFiB,CAEL;QAAEC,KAAK,EAAEV,OAAO,CAACM,YAAjB;AAA+BL,QAAAA,gBAAAA;OAF1B,EAE8CF,KAF9C,CAApB,CAAA;AAGAA,MAAAA,KAAK,CAACY,eAAN,EAAA,CAAA;MAEAC,2BAAuB,CAACL,KAAD,CAAvB,CAAA;AACAM,MAAAA,iBAAM,CACJN,KAAK,CAACO,eAAN,CAAsBC,MAAtB,CAA6Bf,OAAO,CAACc,eAArC,CADI,EAEH,CAAA,+BAAA,EAAiCd,OAAO,CAACc,eAAgB,EAFtD,CAAN,CAAA;MAKA,OAAO,EACL,GAAGX,GADE;AAELa,QAAAA,QAAQ,EAAE,KAFL;QAGLT,KAHK;QAILU,MAAM,EAAEC,aAAM,CAAClB,OAAO,CAACiB,MAAT,EAAiBV,KAAK,CAACY,IAAN,CAAWC,QAA5B,CAAA;OAJhB,CAAA;AAMD,KAAA;;IACD,MAAMb,KAAK,GAAG,MAAMT,QAAQ,CACzBU,IADiB,EAAA,CAEjBa,cAFiB,CAGhB;MAAEC,QAAQ,EAAEtB,OAAO,CAACc,eAApB;AAAqCb,MAAAA,gBAAAA;KAHrB,EAIhBF,KAJgB,CAApB,CAAA;AAMAA,IAAAA,KAAK,CAACY,eAAN,EAAA,CAAA;IAEA,OAAO,EACL,GAAGR,GADE;AAELa,MAAAA,QAAQ,EAAE,IAFL;MAGLT,KAHK;MAILU,MAAM,EAAEC,aAAM,CAAClB,OAAO,CAACiB,MAAT,EAAiBV,KAAK,CAACY,IAAN,CAAWC,QAA5B,CAAA;KAJhB,CAAA;AAMD,GAAA;AA/CwE;;;;;"}