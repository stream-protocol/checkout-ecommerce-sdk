{"version":3,"file":"findBidByTradeState.cjs","sources":["../../../../../src/plugins/auctionHouseModule/operations/findBidByTradeState.ts"],"sourcesContent":["import type { PublicKey } from '@solana/web3.js';\nimport { AuctionHouse, Bid } from '../models';\nimport type { Metaplex } from '@/Metaplex';\nimport {\n  Operation,\n  OperationHandler,\n  OperationScope,\n  useOperation,\n} from '@/types';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindBidByTradeStateOperation' as const;\n\n/**\n * Finds a Bid by its trade state address.\n *\n * ```ts\n * const nft = await metaplex\n *   .auctionHouse()\n *   .findBidByTradeState({ tradeStateAddress, auctionHouse };\n * ```\n *\n * @group Operations\n * @category Constructors\n */\nexport const findBidByTradeStateOperation =\n  useOperation<FindBidByTradeStateOperation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type FindBidByTradeStateOperation = Operation<\n  typeof Key,\n  FindBidByTradeStateInput,\n  Bid\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type FindBidByTradeStateInput = {\n  /** Buyer trade state PDA account encoding the bid order. */\n  tradeStateAddress: PublicKey;\n\n  /** A model of the Auction House related to this bid. */\n  auctionHouse: AuctionHouse;\n\n  /**\n   * Whether or not we should fetch the JSON Metadata for the NFT or SFT.\n   *\n   * @defaultValue `true`\n   */\n  loadJsonMetadata?: boolean;\n};\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const findBidByTradeStateOperationHandler: OperationHandler<FindBidByTradeStateOperation> =\n  {\n    handle: async (\n      operation: FindBidByTradeStateOperation,\n      metaplex: Metaplex,\n      scope: OperationScope\n    ) => {\n      const { tradeStateAddress } = operation.input;\n      const receiptAddress = metaplex.auctionHouse().pdas().bidReceipt({\n        tradeState: tradeStateAddress,\n        programs: scope.programs,\n      });\n\n      return metaplex\n        .auctionHouse()\n        .findBidByReceipt({ receiptAddress, ...operation.input }, scope);\n    },\n  };\n"],"names":["Key","findBidByTradeStateOperation","useOperation","findBidByTradeStateOperationHandler","handle","operation","metaplex","scope","tradeStateAddress","input","receiptAddress","auctionHouse","pdas","bidReceipt","tradeState","programs","findBidByReceipt"],"mappings":";;;;;;AAWA;AACA;;AAEA,MAAMA,GAAG,GAAG,8BAAZ,CAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MACaC,4BAA4B,GACvCC,sBAAY,CAA+BF,GAA/B,EADP;AAGP;AACA;AACA;AACA;;AA0BA;AACA;AACA;AACA;AACO,MAAMG,mCAAmF,GAC9F;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIH;IACH,MAAM;AAAEC,MAAAA,iBAAAA;KAAsBH,GAAAA,SAAS,CAACI,KAAxC,CAAA;IACA,MAAMC,cAAc,GAAGJ,QAAQ,CAACK,YAAT,EAAwBC,CAAAA,IAAxB,EAA+BC,CAAAA,UAA/B,CAA0C;AAC/DC,MAAAA,UAAU,EAAEN,iBADmD;MAE/DO,QAAQ,EAAER,KAAK,CAACQ,QAAAA;AAF+C,KAA1C,CAAvB,CAAA;AAKA,IAAA,OAAOT,QAAQ,CACZK,YADI,EAAA,CAEJK,gBAFI,CAEa;MAAEN,cAAF;AAAkB,MAAA,GAAGL,SAAS,CAACI,KAAAA;KAF5C,EAEqDF,KAFrD,CAAP,CAAA;AAGD,GAAA;AAfH;;;;;"}