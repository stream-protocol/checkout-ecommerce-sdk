{ "version": 3, "sources": ["../src/sdk.ts", "../src/constants/urls.ts", "../src/utils/index.ts", "../src/modules/session.ts", "../src/modules/webhook.ts", "../src/client.ts"], "sourcesContent": ["import { Webhook, Session } from \"./modules\";\nimport { Client } from \"./client\";\nimport { Config } from \"./interfaces\";\n\nexport class StreamPay {\n  private client: Client;\n  public webhook: Webhook;\n  public session: Session;\n\n  constructor(options: Config) {\n    this.client = new Client(options);\n    this.webhook = new Webhook(this.client);\n    this.session = new Session(this.client, options.network, options.config);\n  }\n}\n", "/**\n * @internal\n */\nexport const CONVOY_API_URL = \"https://dashboard.getconvoy.io/api/v1\";\n\n/**\n * @internal\n */\nexport const BASE_API_URL =\n  \"https://checkout-production.streampayment.app/api/v1\";\n", "import { tokens } from \"../constants\";\nimport { SupportedSplTokens } from \"../types\";\n\n/**\n * Returns mint address of the supported SPL token\n */\nexport const getSupportedTokenMintAddress = (\n  token: SupportedSplTokens | \"sol\" | \"usdc\"\n) => {\n  return tokens.get(token);\n};\n\n/**\n * Precise round a number\n */\nexport const preciseRound = (number: number, precision: number) => {\n  const multiplier = !!precision ? Math.pow(10, precision) : 1;\n  return Math.ceil(number * multiplier) / multiplier;\n};\n", "import { Client } from \"../client\";\nimport { CreateSessionOptions, CreateSessionResponse } from \"../interfaces\";\nimport { preciseRound } from \"../utils\";\n\nexport class Session {\n  private client: Client;\n  private network: string;\n  private config: object;\n\n  constructor(client: Client, network: string, config: object) {\n    this.client = client;\n    this.network = network;\n    this.config = config;\n  }\n\n  /**\n   * It takes in an object, makes a POST request to the /session endpoint, and returns\n   * the response data\n   * @param {CreateSessionOptions} options - SessionOptions\n   * @returns The response data from the API call.\n   */\n  async create(options: CreateSessionOptions): Promise<CreateSessionResponse> {\n    try {\n      let amount = preciseRound(\n        options.items.reduce(\n          (index, { price, quantity }) => index + price * quantity,\n          0\n        ),\n        3\n      );\n\n      if (options.shipping_fees) {\n        amount = preciseRound(amount + options.shipping_fees, 3);\n      }\n\n      const parameters = {\n        ...options,\n        network: this.network,\n        amount,\n        config: this.config,\n      };\n\n      const response = await this.client.post(`/session`, parameters);\n      return response.data;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n", "import { Webhook as SvixWebhook } from \"svix\";\n\nimport { Client } from \"../client\";\nimport {\n  WebhookRegisterOptions,\n  WebhookRegisterResponse,\n  WebhookVerifyOptions,\n} from \"../interfaces\";\n\nexport class Webhook {\n  private client: Client;\n\n  constructor(client: Client) {\n    this.client = client;\n  }\n\n  /**\n   * It takes in an object, makes a POST request to the /webhook endpoint, and returns the response data\n   * @param {WebhookRegisterOptions} options - WebhookOptions\n   */\n  async register(\n    options: WebhookRegisterOptions\n  ): Promise<WebhookRegisterResponse> {\n    try {\n      const response = await this.client.post(`/webhook`, options);\n\n      return response.data;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * A helper function to verify the webhook's signature in the headers\n   */\n  async verify(options: WebhookVerifyOptions) {\n    const svixWebhook = new SvixWebhook(options.webhook_secret);\n    try {\n      await svixWebhook.verify(options.payload, options.headers);\n    } catch (err) {\n      throw new Error(\"Invalid webhook signature\");\n    }\n  }\n}\n", "import axios, { AxiosInstance, AxiosResponse } from \"axios\";\n\nimport { Config } from \"./interfaces\";\nimport { BASE_API_URL } from \"./constants\";\n\nexport class Client {\n  private request: AxiosInstance;\n\n  constructor(options: Config) {\n    this.request = axios.create({\n      baseURL: BASE_API_URL,\n      headers: {\n        Authorization: `Bearer ${options.api_key}`,\n      },\n    });\n  }\n\n  public async get(\n    path: string,\n    query: URLSearchParams\n  ): Promise<AxiosResponse<any, any>> {\n    const parameters = `?` + new URLSearchParams(query).toString();\n    return this.request.get(`${path}?${parameters}`);\n  }\n\n  public async post(\n    path: string,\n    data: object\n  ): Promise<AxiosResponse<any, any>> {\n    return this.request.post(`${path}`, data);\n  }\n}\n"], "mappings": "m7BAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,cAAAE,IAAA,eAAAC,EAAAH,GCQO,IAAMI,EACX,6DCMK,IAAMC,EAAeC,EAAA,CAACC,EAAgBC,IAAsB,CACjE,IAAMC,EAAeD,EAAY,KAAK,IAAI,GAAIA,CAAS,EAAI,EAC3D,OAAO,KAAK,KAAKD,EAASE,CAAU,EAAIA,CAC1C,EAH4B,gBCXrB,IAAMC,EAAN,KAAc,CAKnB,YAAYC,EAAgBC,EAAiBC,EAAgB,CAC3D,KAAK,OAASF,EACd,KAAK,QAAUC,EACf,KAAK,OAASC,CAChB,CAQA,MAAM,OAAOC,EAA+D,CAC1E,GAAI,CACF,IAAIC,EAASC,EACXF,EAAQ,MAAM,OACZ,CAACG,EAAO,CAAE,MAAAC,EAAO,SAAAC,CAAS,IAAMF,EAAQC,EAAQC,EAChD,CACF,EACA,CACF,EAEIL,EAAQ,gBACVC,EAASC,EAAaD,EAASD,EAAQ,cAAe,CAAC,GAGzD,IAAMM,EAAaC,EAAAC,EAAA,GACdR,GADc,CAEjB,QAAS,KAAK,QACd,OAAAC,EACA,OAAQ,KAAK,MACf,GAGA,OADiB,MAAM,KAAK,OAAO,KAAK,WAAYK,CAAU,GAC9C,IAClB,OAASG,EAAP,CACA,MAAM,IAAI,MAAMA,CAAG,CACrB,CACF,CACF,EA5CaC,EAAAd,EAAA,WCJb,IAAAe,EAAuC,gBAShC,IAAMC,EAAN,KAAc,CAGnB,YAAYC,EAAgB,CAC1B,KAAK,OAASA,CAChB,CAMA,MAAM,SACJC,EACkC,CAClC,GAAI,CAGF,OAFiB,MAAM,KAAK,OAAO,KAAK,WAAYA,CAAO,GAE3C,IAClB,OAASC,EAAP,CACA,MAAM,IAAI,MAAMA,CAAG,CACrB,CACF,CAKA,MAAM,OAAOD,EAA+B,CAC1C,IAAME,EAAc,IAAI,EAAAC,QAAYH,EAAQ,cAAc,EAC1D,GAAI,CACF,MAAME,EAAY,OAAOF,EAAQ,QAASA,EAAQ,OAAO,CAC3D,OAASC,EAAP,CACA,MAAM,IAAI,MAAM,2BAA2B,CAC7C,CACF,CACF,EAlCaG,EAAAN,EAAA,WCTb,IAAAO,EAAoD,oBAK7C,IAAMC,EAAN,KAAa,CAGlB,YAAYC,EAAiB,CAC3B,KAAK,QAAU,EAAAC,QAAM,OAAO,CAC1B,QAASC,EACT,QAAS,CACP,cAAe,UAAUF,EAAQ,SACnC,CACF,CAAC,CACH,CAEA,MAAa,IACXG,EACAC,EACkC,CAClC,IAAMC,EAAa,IAAM,IAAI,gBAAgBD,CAAK,EAAE,SAAS,EAC7D,OAAO,KAAK,QAAQ,IAAI,GAAGD,KAAQE,GAAY,CACjD,CAEA,MAAa,KACXF,EACAG,EACkC,CAClC,OAAO,KAAK,QAAQ,KAAK,GAAGH,IAAQG,CAAI,CAC1C,CACF,EA1BaC,EAAAR,EAAA,ULDN,IAAMS,EAAN,KAAe,CAKpB,YAAYC,EAAiB,CAC3B,KAAK,OAAS,IAAIC,EAAOD,CAAO,EAChC,KAAK,QAAU,IAAIE,EAAQ,KAAK,MAAM,EACtC,KAAK,QAAU,IAAIC,EAAQ,KAAK,OAAQH,EAAQ,QAASA,EAAQ,MAAM,CACzE,CACF,EAVaI,EAAAL,EAAA", "names": ["sdk_exports", "__export", "StreamPay", "__toCommonJS", "BASE_API_URL", "preciseRound", "__name", "number", "precision", "multiplier", "Session", "client", "network", "config", "options", "amount", "preciseRound", "index", "price", "quantity", "parameters", "__spreadProps", "__spreadValues", "err", "__name", "import_svix", "Webhook", "client", "options", "err", "svixWebhook", "SvixWebhook", "__name", "import_axios", "Client", "options", "axios", "BASE_API_URL", "path", "query", "parameters", "data", "__name", "StreamPay", "options", "Client", "Webhook", "Session", "__name"] }