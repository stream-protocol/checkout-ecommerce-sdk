{"version":3,"sources":["../../src/modules/webhook.ts"],"sourcesContent":["import { Webhook as SvixWebhook } from \"svix\";\n\nimport { Client } from \"../client\";\nimport {\n  WebhookRegisterOptions,\n  WebhookRegisterResponse,\n  WebhookVerifyOptions,\n} from \"../interfaces\";\n\nexport class Webhook {\n  private client: Client;\n\n  constructor(client: Client) {\n    this.client = client;\n  }\n\n  /**\n   * It takes in an object, makes a POST request to the /webhook endpoint, and returns the response data\n   * @param {WebhookRegisterOptions} options - WebhookOptions\n   */\n  async register(\n    options: WebhookRegisterOptions\n  ): Promise<WebhookRegisterResponse> {\n    try {\n      const response = await this.client.post(`/webhook`, options);\n\n      return response.data;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * A helper function to verify the webhook's signature in the headers\n   */\n  async verify(options: WebhookVerifyOptions) {\n    const svixWebhook = new SvixWebhook(options.webhook_secret);\n    try {\n      await svixWebhook.verify(options.payload, options.headers);\n    } catch (err) {\n      throw new Error(\"Invalid webhook signature\");\n    }\n  }\n}\n"],"mappings":"+cAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAuC,gBAShC,IAAMC,EAAN,KAAc,CAGnB,YAAYC,EAAgB,CAC1B,KAAK,OAASA,CAChB,CAMA,MAAM,SACJC,EACkC,CAClC,GAAI,CAGF,OAFiB,MAAM,KAAK,OAAO,KAAK,WAAYA,CAAO,GAE3C,IAClB,OAASC,EAAP,CACA,MAAM,IAAI,MAAMA,CAAG,CACrB,CACF,CAKA,MAAM,OAAOD,EAA+B,CAC1C,IAAME,EAAc,IAAI,EAAAC,QAAYH,EAAQ,cAAc,EAC1D,GAAI,CACF,MAAME,EAAY,OAAOF,EAAQ,QAASA,EAAQ,OAAO,CAC3D,OAASC,EAAP,CACA,MAAM,IAAI,MAAM,2BAA2B,CAC7C,CACF,CACF,EAlCaG,EAAAN,EAAA","names":["webhook_exports","__export","Webhook","__toCommonJS","import_svix","Webhook","client","options","err","svixWebhook","SvixWebhook","__name"]}